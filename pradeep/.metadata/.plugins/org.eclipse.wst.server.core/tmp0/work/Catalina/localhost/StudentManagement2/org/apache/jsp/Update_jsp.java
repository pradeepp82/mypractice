/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-08-14 06:32:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("  <title>Student Management</title>\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("  <style>\n");
      out.write("    /* Remove the navbar's default margin-bottom and rounded borders */ \n");
      out.write("    .navbar {\n");
      out.write("      margin-bottom: 0;\n");
      out.write("      border-radius: 0;\n");
      out.write("    }\n");
      out.write("    .jumbotron {\n");
      out.write("    //background-image: url(\"image/Students-studying-outdoors.jpg\");\n");
      out.write("    //background-repeat: no-repeat;\n");
      out.write("    background-size: cover;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 567px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" form {\n");
      out.write("    padding-top: 25px;\n");
      out.write("}\n");
      out.write("    \n");
      out.write("    /* Add a gray background color and some padding to the footer */\n");
      out.write("    footer {\n");
      out.write("      background-color: #222;\n");
      out.write("      padding: 25px;\n");
      out.write("    }\n");
      out.write("    footer p {\n");
      out.write("    color: blanchedalmond;\n");
      out.write("}\n");
      out.write(".jumbotron {\n");
      out.write("    padding-top: 30px;\n");
      out.write("    padding-bottom: 30px;\n");
      out.write("    margin-bottom: 0px;\n");
      out.write("    color: inherit;\n");
      out.write("    background-color: #eee;\n");
      out.write("}\n");
      out.write("table, th, td {\n");
      out.write("    border: 1px solid black;\n");
      out.write("    border-collapse: collapse;\n");
      out.write("    text-align:center;\n");
      out.write("}\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<nav class=\"navbar navbar-inverse\">\n");
      out.write("  <div class=\"container-fluid\">\n");
      out.write("    <div class=\"navbar-header\">\n");
      out.write("      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n");
      out.write("        <span class=\"icon-bar\"></span>\n");
      out.write("        <span class=\"icon-bar\"></span>\n");
      out.write("        <span class=\"icon-bar\"></span>                        \n");
      out.write("      </button>\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">logo</a>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\n");
      out.write("      <ul class=\"nav navbar-nav\">\n");
      out.write("        <li class=\"active\"><a href=\"http://localhost:8080/StudentManagement2/#\">Home</a></li>\n");
      out.write("        <li><a href=\"#\">About</a></li>\n");
      out.write("        <li><a href=\"#\">Gallery</a></li>\n");
      out.write("        <li><a href=\"#\">Contact</a></li>\n");
      out.write("      </ul>\n");
      out.write("      <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("        <li><a href=\"Adminlogin.html\"><span ></span>Admin</a></li>\n");
      out.write("         <li><a href=\"logout.jsp\"><span></span>logout</a></li>\n");
      out.write("      </ul>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</nav>\n");
      out.write("\n");
      out.write("<div class=\"jumbotron\">\n");
      out.write("  <div class=\"container text-center\">\n");
      out.write("     ");

         request.getSession(false);
if(session!=null){
	String pass=(String)session.getAttribute("pass");
	String name =(String)session.getAttribute("name");
	String rollno =(String)session.getAttribute("rollno");
	
	Class.forName("com.mysql.jdbc.Driver");  
    java.sql.Connection con=DriverManager.getConnection(  
    "jdbc:mysql://localhost:3306/Student","root","root"); 
     PreparedStatement pst = con.prepareStatement("select * from Student_data where Name= ?   and Rollno= ?");
   pst.setString(1,name);
   pst.setString(2,rollno);
   ResultSet rs =pst.executeQuery();
   if(rs.next()){
   	
          int id  = rs.getInt("Id");
		  String name1 = rs.getString("Name");
		  String email = rs.getString("Email");
		  String rollno1 = rs.getString("Rollno");
		  String sem = rs.getString("Sem");
		  String marks = rs.getString("Marks");
		    session.setAttribute("id", id);
     
      
    
      out.write("\n");
      out.write("    <center>\n");
      out.write("        <h3>Semester:</h3>");
 out.print(sem);
      out.write(" \n");
      out.write("    <form method=\"post\">\n");
      out.write("    <table style=\"width:100%\">\n");
      out.write("  <tr>\n");
      out.write("   \n");
      out.write("    <th>Name</th>\n");
      out.write("    <th>Email</th> \n");
      out.write("    <th>Rollno</th>\n");
      out.write("    <th>Marks/500</th>\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("    <td><input type=\"text\" name=\"name1\"  value=");
      out.print( name1);
      out.write("></td>\n");
      out.write("    <td><input type=\"email\" name=\"email\" value=");
      out.print( email);
      out.write("></td>\n");
      out.write("    <td><input type=\"text\" name=\"rollno\" value=");
      out.print( rollno1 );
      out.write("></td>\n");
      out.write("    <td><input type=\"text\" name=\"marks\" value=");
      out.print( marks);
      out.write("></td>\n");
      out.write("  </tr>\n");
      out.write("   \n");
      out.write("  \n");
      out.write("</table><br><br>\n");
      out.write("<!-- <input type=\"submit\" value=\"Update\"/> -->\n");
      out.write("<input type=\"submit\" name=\"update\" value=\"Update Button\">\n");
      out.write("<input type=\"submit\" name=\"delete\" value=\"Delete Button\">\n");
      out.write("</form>\n");
      out.write("</center>\n");
      out.write("    ");
 
		   
   }
     		  
}else{
	  response.sendRedirect("Adminlogin.html");
}
	
	
     String nameu =request.getParameter("name1");
     String emailu =request.getParameter("email");
     String rollnou =request.getParameter("rollno");
     String marksu =request.getParameter("marks");
     String update =request.getParameter("update");
     String delete =request.getParameter("delete");
      int id1 = (int)session.getAttribute("id");
      
     
     
     if (request.getParameter("update") != null) {
          

     	try{
			if(nameu.equals("")||emailu.equals("")||rollnou.equals("")||marksu.equals("")){
				 out.print("plz fill all the fields");
			    
			} else
			{
		   	
		    Class.forName("com.mysql.jdbc.Driver");  
		    java.sql.Connection con=DriverManager.getConnection(  
		    "jdbc:mysql://localhost:3306/Student","root","root"); 
		    
		     PreparedStatement pst = con.prepareStatement("UPDATE Student_data SET Name=?, Email=?, Rollno=?,Marks=? WHERE Id=?");
	           pst.setString(1,nameu);
	           pst.setString(2,emailu);
	           pst.setString(3,rollnou);
	           pst.setString(4,marksu);
	           pst.setInt(5,id1);
	       
	        int rs =pst.executeUpdate();
	         if(rs==1){
	        	 
	        	 out.print("updated");
	         }else{
	        	 out.print("sorry");
	         }
	        
	        	
	        
	           
	      	}}catch (Exception e) {
			e.printStackTrace();
		    } 
              }else if (request.getParameter("delete") != null) {
        	 try{
        		 int id =(int)session.getAttribute("id");
        		 
        		 Statement stmt = null;
     		   	
     		    Class.forName("com.mysql.jdbc.Driver");  
     		    java.sql.Connection con=DriverManager.getConnection(  
     		    "jdbc:mysql://localhost:3306/Student","root","root"); 
     		   PreparedStatement pst = con.prepareStatement("DELETE  from  Student_data WHERE Id = ?");
     		      pst.setInt(1,id1);
     	          
     		     int rs =pst.executeUpdate();
    	         if(rs==1){
    	        	 out.print("record deleted");
    	        	 //RequestDispatcher rd = request.getRequestDispatcher("StudentUpdate.jsp");
    	        	 //rd.include(request, response);
    	        	 
    	         }else{
    	        	 out.print("sorry");
    	         }
     	            
     	            
     		     } catch (Exception e) {
     			    e.printStackTrace();
     		} 
                   
       }


      out.write("\n");
      out.write("     \n");
      out.write("  \n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("<footer class=\"container-fluid text-center\">\n");
      out.write("  <p>&copy; Indore Institute of Science & Technology;</p>\n");
      out.write("</footer>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
